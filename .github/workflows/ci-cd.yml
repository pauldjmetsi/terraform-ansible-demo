name: Terraform + Ansible CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Set up the environmental variables for the deployment from GitHub Secrets
    environment: dev

    env:
      # AWS Credentials from GitHub Secrets
      TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_IN_AUTOMATION: true
      
      # Map GitHub Environment variables to Terraform variables
      TF_VAR_region: ${{ vars.AWS_REGION }}
      TF_VAR_ami_id: ${{ vars.AWS_AMI_ID }}
      TF_VAR_subnet_id: ${{ vars.AWS_SUBNET_ID }}
      TF_VAR_security_group_ids: '["${{ vars.AWS_SECURITY_GROUP_IDS }}"]'
      TF_VAR_key_name: ${{ vars.AWS_KEY_NAME }}
      TF_VAR_environment: ${{ vars.ENVIRONMENT }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -backend-config="bucket=my-tf-state" -backend-config="region=eu-west-2"

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Extract Terraform Outputs
        id: tfoutputs
        working-directory: ./terraform
        run: |
          echo "EC2_IP=$(terraform output -raw web_instance_ip)" >> $GITHUB_ENV

      - name: Install Ansible dependencies
        run: |
          pip install boto3 botocore
          ansible-galaxy collection install amazon.aws

      - name: Setup Ansible
        run: |
          sudo apt update && sudo apt install -y ansible

      - name: Configure SSH key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_CLOUDBOLT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Configure Web Server via Ansible
        working-directory: ./ansible
        run: |
          ansible-playbook -i inventory/dynamic_aws_ec2.yml \
          playbooks/configure_app.yml \
          --user ubuntu \
          --private-key ~/.ssh/id_rsa \
          --ssh-extra-args="-o StrictHostKeyChecking=no"
